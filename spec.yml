openapi: 3.0.0
swagger: 2.0

info:
  title: Geode Index
  description: its the geode
  version: 1.0.0

tags: 
  - name: mods
    description: Access to Index mods 

  - name: user
    description: User management 

paths:
  /mods:
    get:
      tags:
        - mods
      summary: Search all mods, paginated

      parameters:
        - name: query
          in: query
          description: Search query
          schema:
            type: string
        - $ref: '#/components/parameters/GeodeVersionQuery'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'

      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mod'
  
  /mods/{id}:
    get:
      tags:
        - mods
      summary: Get info for a mod
      description: Returns info for the current latest version of the mod
      parameters: 
        - $ref: '#/components/parameters/ModID'

      responses: 
        '200':
          description: OK
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Mod'

  /mods/{id}/versions:
    get:
      tags:
        - mods
      summary: Get all versions of a mod
      parameters: 
        - $ref: '#/components/parameters/ModID'
      responses: 
        '200':
          description: OK
          content: 
            application/json: 
              schema:
                type: string
    
  /mods/{id}/{version}:
    get:
      tags:
        - mods
      summary: Get info for a specific version of a mod
      parameters: 
        - $ref: '#/components/parameters/ModID'
        - $ref: '#/components/parameters/ModVersion'
      responses: 
        '200':
          description: OK
          content: 
            application/json: 
              schema:
                type: string

  /mods/updates:
    post:
      tags:
        - mods
      summary: Get available mod updates
      description: This is only POST because i want it to have a body

      parameters:
        - name: platform
          in: query
          required: false
          schema: 
            $ref: '#/components/schemas/Platform'
        - $ref: '#/components/parameters/GeodeVersionQuery'

      requestBody: 
        content: 
          application/json: 
            schema: 
              type: array
              items:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/ModID'
                  version:
                    $ref: '#/components/schemas/ModVersionString'

      responses:
        '200':
          description: OK
          content:
            application/json: 
              schema:
                type: string
  
  /users/{id}:
    get:
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      summary: Get information about a user
      responses:
        '200':
          description: OK
          content: 
            application/json: 
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    ModID:
      type: string
      pattern: '^[\w\-]\.[\w\-]$'
      description: Mod ID
      examples: 
        - geode.devtools
        - mat.circle-tool
    
    ModVersionString:
      type: string
      pattern: '^v?\d+\.\d+\.\d+(?:-.+)?$'
      examples: 
        - v1.0.0
        - v2.3.4
        - 1.3.0
        - v1.0.0-beta
    
    UserSimple:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          examples:
            - mat
        github:
          type: string
          description: GitHub username
          examples:
            - matcool
      required:
        - id
        - name

    Mod:
      type: object
      properties: 
        id:
          $ref: '#/components/schemas/ModID'
        repository:
          type: string
          examples:
            - 'https://github.com/geode-sdk/geode'
        latest_version:
          $ref: '#/components/schemas/ModVersionString'
        validated:
          type: boolean
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ModVersion'
      required:
        - id
        - latest_version

    ModVersion:
      type: object
      properties:
        id:
          type: int
        name:
          type: string
          examples:
            - Devtools
        description:
          type: string
        geode_version:
          $ref: '#/components/schemas/ModVersionString'
        version:
          $ref: '#/components/schemas/ModVersionString'
        download_link:
          type: string
          examples:
            - 'https://github.com/geode-sdk/DevTools/releases/download/v1.3.0/geode.devtools.geode'
        hash:
          type: string
          description: This is generated serverside
        mod_id:
          $ref: '#/components/schemas/ModID'
      
    Platform:
      type: string
      enum: 
        - win
        - mac
        - android32
        - android64
        - ios
    
  parameters: 
    ModID:
      name: id
      description: Mod ID
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ModID'
      
    ModVersion:
      name: version
      description: Mod Version
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ModVersionString'

    GeodeVersionQuery:
      name: geode
      in: query
      description: Geode version being used
      required: false
      schema:
        $ref: '#/components/schemas/ModVersionString'
    
    Page:
      name: page
      in: query
      description: Page number (default 1)
      required: false
      schema:
        type: int
    
    PerPage:
      name: per_page 
      in: query
      description: Number of elements to fetch per page (default 10) 
      required: false
      schema:
        type: int
